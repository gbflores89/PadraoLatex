#*-------------------------------------------------------------------
* EMSO Model Library (EML) Copyright (C) 2004 - 2007 ALSOC.
*
* This LIBRARY is free software; you can distribute it and/or modify
* it under the therms of the ALSOC FREE LICENSE as available at
* http://www.enq.ufrgs.br/alsoc.
*
* EMSO Copyright (C) 2004 - 2007 ALSOC, original code
* from http://www.rps.eng.br Copyright (C) 2002-2004.
* All rights reserved.
*
* EMSO is distributed under the therms of the ALSOC LICENSE as
* available at http://www.enq.ufrgs.br/alsoc.
*
*----------------------------------------------------------------------
* File containg models of columns: distillation, stripping, absorbers
* rectifier, ....
*
* The default nomenclature is:
*		Type_Column_reboilertype_condensertyper
*
* where:
*	Type = refluxed or reboiled or section
*	Column = Stripping, Absorption, Rectifier, Distillation
*	Reboiler type (if exists) = kettle or thermosyphon 
*	Condenser type (if exists) = with subccoling or without subcooling
* 
*-----------------------------------------------------------------------
* Author: Paula B. Staudt
* $Id: column.mso 243 2007-04-16 17:19:39Z paula $
*---------------------------------------------------------------------*#

using "tray";
using "reboiler";
using "condenser";
using "mixers_splitters/splitter";
using "mixers_splitters/mixer";
using "tank";
using "pressure_changers/pump";

#*----------------------------------------------------------------------
* Model of a  column section with:
*	- NTrays=number of trays trays.
* 
*---------------------------------------------------------------------*# 
Model Section_Column
	
	PARAMETERS
outer PP as Plugin(Brief = "External Physical Properties", Type="PP");
outer NComp as Integer;
	NTrays as Integer(Brief="Number of trays", Default=2);
	topdown as Integer(Brief="Trays counting (1=top-down, -1=bottom-up)", Default=1);
	top as Integer(Brief="Number of top tray");
	bot as Integer(Brief="Number of bottom tray");

	SET
	top = (NTrays-1)*(1-topdown)/2+1;
	bot = NTrays/top;
	
	VARIABLES
	trays(NTrays) as tray;

	CONNECTIONS
	trays([top+topdown:topdown:bot]).OutletV to trays([top:topdown:bot-topdown]).InletV;
	trays([top:topdown:bot-topdown]).OutletL to trays([top+topdown:topdown:bot]).InletL;
end


#*----------------------------------------------------------------------
* Model of a  distillation column containing:
*	- NTrays like tray;
*	- a kettle reboiler;
*	- dymamic condenser;
*	- a splitter which separate reflux and distillate;
*	- a pump in reflux stream;
*---------------------------------------------------------------------*# 
Model Distillation_kettle_cond
	PARAMETERS
outer PP as Plugin(Brief = "External Physical Properties", Type="PP");
outer NComp as Integer;
	NTrays as Integer(Brief="Number of trays", Default=2);
	topdown as Integer(Brief="Trays counting (1=top-down, -1=bottom-up)", Default=1);
	top as Integer(Brief="Number of top tray");
	bot as Integer(Brief="Number of bottom tray");
	VapourFlow as Switcher(Valid = ["on", "off"], Default = "on");

	SET
	top = (NTrays-1)*(1-topdown)/2+1;
	bot = NTrays/top;
	
	VARIABLES
	trays(NTrays) as tray;
	cond as condenser;
	reb as reboiler;
	sptop as splitter;
	pump1 as pump;

	alfaTopo as Real;

	EQUATIONS
	switch VapourFlow
		case "on":
		cond.InletV.F*trays(top).vV = alfaTopo * trays(top).Ah * sqrt(2*(trays(top).OutletV.P -
		cond.OutletL.P + 1e-8 * 'atm') / (trays(top).alfa*trays(top).rhoV));
		when cond.InletV.F < 1e-6 * 'kmol/h' switchto "off";
		
		case "off":
		cond.InletV.F = 0 * 'mol/s';
		when trays(top).OutletV.P > cond.OutletL.P + 1e-3 * 'atm' switchto "on";
	end	

	CONNECTIONS
	#vapor
	reb.OutletV to trays(bot).InletV;
	trays([top+topdown:topdown:bot]).OutletV to trays([top:topdown:bot-topdown]).InletV;
	trays(top).OutletV to cond.InletV;
	
	#liquid
	cond.OutletL to sptop.Inlet;	
	sptop.Outlet2 to pump1.Inlet;
	pump1.Outlet to trays(top).InletL;
	trays([top:topdown:bot-topdown]).OutletL to trays([top+topdown:topdown:bot]).InletL;
	trays(bot).OutletL to reb.InletL;
end
